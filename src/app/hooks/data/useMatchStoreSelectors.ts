import useMatchStore from '../../match/stores/matchStore'

export default function useMatchStoreSelectors() {
  return {
    isHome: useMatchStore(state => state.isHome),
    setIsHome: useMatchStore(state => state.setIsHome),
    matchTeam: useMatchStore(state => state.matchTeam),
    setMatchTeam: useMatchStore(state => state.setMatchTeam),
    events: useMatchStore(state => state.events),
    setEvents: useMatchStore(state => state.setEvents),
    goals: useMatchStore(state => state.goals),
    setGoals: useMatchStore(state => state.setGoals),
    pausePeriods: useMatchStore(state => state.pausePeriods),
    setPausePeriods: useMatchStore(state => state.setPausePeriods),
    startTime: useMatchStore(state => state.startTime),
    setStartTime: useMatchStore(state => state.setStartTime),
    secondHalfStartTime: useMatchStore(state => state.secondHalfStartTime),
    setSecondHalfStartTime: useMatchStore(state => state.setSecondHalfStartTime),
    isStarted: useMatchStore(state => state.isStarted),
    setIsStarted: useMatchStore(state => state.setIsStarted),
    isPaused: useMatchStore(state => state.isPaused),
    setIsPaused: useMatchStore(state => state.setIsPaused),
    isHalfTime: useMatchStore(state => state.isHalfTime),
    setIsHalfTime: useMatchStore(state => state.setIsHalfTime),
    isSecondHalf: useMatchStore(state => state.isSecondHalf),
    matchLongTime: useMatchStore(state => state.matchLongTime),
    setMatchLongTime: useMatchStore(state => state.setMatchLongTime),
    isExtraTime: useMatchStore(state => state.isExtraTime),
    setIsExtraTime: useMatchStore(state => state.setIsExtraTime),
    extraTimeFirstHalf: useMatchStore(state => state.extraTimeFirstHalf),
    setExtraTimeFirstHalf: useMatchStore(state => state.setExtraTimeFirstHalf),
    extraTimeSecondHalf: useMatchStore(state => state.extraTimeSecondHalf),
    setExtraTimeSecondHalf: useMatchStore(state => state.setExtraTimeSecondHalf),
    setisSecondHalf: useMatchStore(state => state.setisSecondHalf),
    startPause: useMatchStore(state => state.startPause),
    endPause: useMatchStore(state => state.endPause),
    archiveMatch: useMatchStore(state => state.archiveMatch),
  }
}
